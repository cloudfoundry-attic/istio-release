---
name: copilot
templates:
  bpm.yml.erb: config/bpm.yml
  config.json.erb: config/config.json
  certs/pilot-client-ca.crt.erb: config/certs/pilot-client-ca.crt
  certs/cloud-controller-client-ca.crt.erb: config/certs/cloud-controller-client-ca.crt
  certs/server.crt.erb: config/certs/server.crt
  certs/server.key.erb: config/certs/server.key
  bbs/certs/ca.crt.erb: config/bbs/certs/ca.crt
  bbs/certs/client.crt.erb: config/bbs/certs/client.crt
  bbs/certs/client.key.erb: config/bbs/certs/client.key
  policy-server/certs/ca.crt.erb: config/policy-server/certs/ca.crt
  policy-server/certs/client.crt.erb: config/policy-server/certs/client.crt
  policy-server/certs/client.key.erb: config/policy-server/certs/client.key

packages:
- copilot
- golang-1-linux

provides:
- name: cloud_controller_to_copilot_conn
  type: cloud_controller_to_copilot_conn
  properties:
  - listen_port_for_cloud_controller

- name: mcp_conn
  type: mcp_conn
  properties:
  - listen_port_for_mcp
  - dns_address_for_mcp

- name: frontend_tls_keypairs
  type: frontend_tls_keypairs
  properties:
  - frontend_tls_keypairs

- name: vip_resolver_conn
  type: vip_resolver_conn
  properties:
  - listen_port_for_vip_resolver

properties:
  listen_port_for_mcp:
    description: "The port that Pilot MCP client will connect to, to retrieve route info"
    default: 9009
  dns_address_for_mcp:
    description: "The dns address that Pilot MCP client will connect to, to retrieve route info"
    default: copilot.service.cf.internal


  pilot_client_ca_cert:
    description: "PEM-encoded CA certificate that signed the client cert used by Pilot platform adapter"

  log_level:
    description: "Sets the log level. Can be one of debug, info, error, or fatal."
    default: fatal

  listen_port_for_cloud_controller:
    description: "The port that Cloud Controller will connect to, to provide route info"
    default: 9001
  cloud_controller_client_ca_cert:
    description: "PEM-encoded CA certificate that signed the client cert used by Cloud Controller"

  listen_port_for_vip_resolver:
    description: "The port that clients will connect to, to query inter istio route virtual IPs"
    default: 9002

  server_cert:
    description: "PEM-encoded server certificate used to communicate with all clients"
  server_key:
    description: "PEM-encoded server private key used to communicate with all clients"

  experimental_vip_cidr:
    description: "Virtual IP addresses for internal routes will be assigned out of this CIDR range."
    default: "127.128.0.0/9"

  bbs.sync_interval:
    description: "Interval at which copilot will query diego for all LRPs and replace its state"
    default: 30s
  bbs.server_ca_cert:
    description: "PEM-encoded CA certificate that signed BBS's server cert"
  bbs.client_cert:
    description: "PEM-encoded client certificate used to connect to BBS"
  bbs.client_key:
    description: "PEM-encoded client private key used to connect to BBS"
  bbs.address:
    description: "Address of BBS"
    default: https://bbs.service.cf.internal:8889
  bbs.client_session_cache_size:
    description: "Capacity of the tls client cache"
    default: 0
  bbs.max_idle_conns_per_host:
    description: "Maximum number of idle http connections"
    default: 0

  policy_server.server_ca_cert:
    description: "Trusted CA certificate that was used to sign the policy server's server cert and key."

  policy_server.client_cert:
    description: "Client certificate for TLS to access policy server."

  policy_server.client_key:
    description: "Client private key for TLS to access policy server."

  frontend_tls_keypairs:
    description: "Array of private keys and certificates used for TLS handshakes with downstream clients. Each element in the array is an object containing fields 'private_key' and 'cert_chain', each of which supports a PEM block. "
    default: []
