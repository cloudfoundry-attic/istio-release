#!/usr/bin/env bash

set -eo pipefail

pushd "${PWD}/${VARS_LOCATION}" > /dev/null
  eval "$(bbl print-env)"
  export BOSH_DEPLOYMENT=${DEPLOYMENT_NAME}
  cf_admin_password=$(credhub find -j -n cf_admin_password | jq -r .credentials[].name | xargs credhub get -j -n | jq -r .value)
popd > /dev/null

gopath_dir="/root/go/src/code.cloudfoundry.org"
mkdir -p "${gopath_dir}"
cp -R istio-scaling "${gopath_dir}"

go install code.cloudfoundry.org/istio-scaling/vendor/github.com/onsi/ginkgo/ginkgo

pushd "${gopath_dir}/istio-scaling"

if [ -n "$DATADOG_API_KEY" ]; then
cat << EOF > "${PWD}/config.json"
{
  "cf_admin_user": "admin",
  "cf_admin_password": "$cf_admin_password",
  "cf_internal_apps_domain": "apps.internal",
  "cf_system_domain": "$SYSTEM_DOMAIN",
  "cf_istio_domain": "istio.$SYSTEM_DOMAIN",
  "cf_org_name": "scaling-test-org",
  "cf_space_name": "scaling-test-space",
  "datadog_api_key": "$DATADOG_API_KEY"
}
EOF
else
cat << EOF > "${PWD}/config.json"
{
  "cf_admin_user": "admin",
  "cf_admin_password": "$cf_admin_password",
  "cf_internal_apps_domain": "apps.internal",
  "cf_system_domain": "$SYSTEM_DOMAIN",
  "cf_istio_domain": "istio.$SYSTEM_DOMAIN",
  "cf_org_name": "scaling-test-org",
  "cf_space_name": "scaling-test-space"
}
EOF
fi
cat << EOF > "${PWD}/plan.json"
{
  "number_of_apps_to_push": $NUMBER_OF_APPS,
  "number_of_apps_to_curl": $NUMBER_OF_APPS,
  "passing_threshold": $PASSING_THRESHOLD,
  "app_instances": 1,
  "cleanup": $CLEANUP_ORG
}
EOF

  echo "PLAN: $(cat "${PWD}/plan.json")"
  CONFIG="$PWD/config.json" PLAN="$PWD/plan.json" scripts/test
popd
